# Win key
set $mod Mod4

font pango:Monocraft 8

input * {
  xkb_layout "gb"
  xkb_variant "extd"
  xkb_options caps:escape
}  

set $lock_command $HOME/bin/swaylock.sh

### Idle configuration
exec swayidle -w \
          timeout 1200 $lock_command \
          timeout 1500 'swaymsg "output * power off"' resume 'swaymsg "output * power on"' \
          before-sleep $lock_command
#
# This will lock your screen after 1200 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

# https://github.com/flameshot-org/flameshot/blob/master/docs/Sway%20and%20wlroots%20support.md
exec systemctl --user import-environment DISPLAY WAYLAND_DISPLAY SWAYSOCK
exec hash dbus-update-activation-environment 2>/dev/null && \
     dbus-update-activation-environment --systemd DISPLAY WAYLAND_DISPLAY SWAYSOCK

# Screenshotting
# bindsym Print exec --no-startup-id flameshot gui
bindsym Print exec --no-startup-id grim -g "$(slurp)" - | wl-copy

set $refresh_i3status killall -SIGUSR1 i3status
# bindsym XF86AudioLowerVolume    exec --no-startup-id amixer -q -D pulse sset Master 5%- unmute
# bindsym XF86AudioRaiseVolume    exec --no-startup-id amixer -q -D pulse sset Master 5%+ unmute
# bindsym XF86AudioMute           exec --no-startup-id amixer -q -D pulse sset Master toggle
bindsym --locked XF86AudioLowerVolume exec pactl set-sink-volume \@DEFAULT_SINK@ -5%
bindsym --locked XF86AudioRaiseVolume exec pactl set-sink-volume \@DEFAULT_SINK@ +5%
bindsym --locked XF86AudioMute exec pactl set-sink-mute \@DEFAULT_SINK@ toggle

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec kitty

# kill focused window
bindsym $mod+Shift+q kill

bindsym $mod+Shift+d exec tofi-run | xargs swaymsg exec --
# only .desktop files
bindsym $mod+d exec --no-startup-id tofi-drun | xargs swaymsg exec --

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+j move left
bindsym $mod+Shift+k move down
bindsym $mod+Shift+l move up
bindsym $mod+Shift+semicolon move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+semicolon split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
#bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1:Main"
set $ws2 "2:TeXStudio"
set $ws3 "3:Zotero"
set $ws4 "4:IDE"
set $ws5 "5"
set $ws6 "6:SP"
set $ws7 "7:Teams"
set $ws8 "8"
set $ws9 "9:Music"
set $ws10 "10"

# switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10

# move focused container to workspace, and switch to it
bindsym $mod+Shift+1 move container to workspace number $ws1, workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2, workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3, workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4, workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5, workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6, workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7, workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8, workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9, workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10, workspace number $ws10

# move focused workspace between monitors
# bindsym $mod+Shift+slash move workspace to output next
bindsym $mod+Shift+slash exec swaymsg move workspace to "$(swaymsg -t get_outputs | jq '[.[] | select(.active == true)] | .[(map(.focused) | index(true) + 1) % length].name')"
#bindsym $mod+Shift+less move workspace to output previous

# reload the configuration file
bindsym $mod+Shift+c reload
# restart sway inplace (preserves your layout/session, can be used to upgrade sway)
bindsym $mod+Shift+r restart

# resize window (you can also use the mouse for that)
set $resize_px 1
set $resize_ppt 1
mode "resize" {
        bindsym Left resize shrink width $resize_px px or $resize_ppt ppt
        bindsym Down resize grow height $resize_px px or $resize_ppt ppt
        bindsym Up resize shrink height $resize_px px or $resize_ppt ppt
        bindsym Right resize grow width $resize_px px or $resize_ppt ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

exec --no-startup-id waybar

# Gaps are neat, but I prefer without with my current setup.
# gaps inner 3px
# gaps outer 3px

### TODO: those rules never really worked for me, I believe.
#for_window [window_role="pop-up"]                       floating enable
#for_window [window_role="bubble"]                       floating enable 
#for_window [window_role="task_dialog"]                  floating enable
#for_window [window_role="Preferences"]                  floating enable
#for_window [window_type="dialog"]                       floating enable 
#for_window [window_type="menu"]                         floating enable

for_window [app_id="flameshot"] border pixel 0, floating enable, fullscreen disable, move absolute position 0 0

### Window assignments
assign [app_id="^org.mozilla.firefox"] → $ws1
assign [class="^TeXstudio$"] → $ws2
assign [class="^obsidian$"] → $ws2
assign [instance="overleaf.com"] → $ws2
assign [app_id="^Zotero$"] → $ws3
assign [class="^jetbrains-*"] → $ws4
assign [class="^Code$"] → $ws4
assign [class="^superProductivity$"] → $ws6
assign [class="^teams-for-linux$"] → $ws7
assign [instance="^teams.microsoft.com__v2$"] → $ws7
for_window [class="^Spotify"] move --no-auto-back-and-forth to workspace $ws9
assign [class="^YouTube Music$"] → $ws9
assign [class="youtube_music"] → $ws9

# Grant focus to new windows, e.g. opening a link from ws3 will focus Firefox in ws1.
# I was never sure how much I liked that setting. It's both convenient and inconvenient.
# focus_on_window_activation focus

### Workspace monitor assignments
workspace $ws1 output DP-2 HDMI-A-1 eDP-1
workspace $ws2 output eDP-1
workspace $ws3 output DP-2 eDP-1
workspace $ws4 output DP-2 eDP-1 HDMI-A-1
workspace $ws5 output eDP-1 DP-2 HDMI-A-1
workspace $ws6 output HDMI-A-1 DP-2 eDP-1
workspace $ws7 output HDMI-A-1 DP-2 eDP-1
workspace $ws8 output DP-2 eDP-1
workspace $ws9 output HDMI-A-1 DP-2 eDP-1

### Custom shortcuts
# Play/pause/skip shortcuts for browser+Spotify:
set $playerctl_cmd playerctl --ignore-player=spotify
set $file_player_last /tmp/last-player-used
bindsym Control+Mod1+space exec --no-startup-id $playerctl_cmd -p $(tail -1 $file_player_last) play-pause || $playerctl_cmd play-pause
# bindsym 201 exec --no-startup-id $playerctl_cmd -p $(tail -1 $file_player_last) play-pause || $playerctl_cmd play-pause
bindsym Control+Mod1+comma exec --no-startup-id $playerctl_cmd -p $(tail -1 $file_player_last) previous || $playerctl_cmd previous
bindsym Control+Mod1+period exec --no-startup-id $playerctl_cmd -p $(tail -1 $file_player_last) next || $playerctl_cmd next
bindsym Control+Shift+space exec --no-startup-id dbus-send --print-reply --dest=org.mpris.MediaPlayer2.spotify /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player.PlayPause
bindsym Control+Shift+comma exec --no-startup-id dbus-send --print-reply --dest=org.mpris.MediaPlayer2.spotify /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player.Previous
bindsym Control+Shift+period exec --no-startup-id dbus-send --print-reply --dest=org.mpris.MediaPlayer2.spotify /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player.Next

# Misc.:
# Brightness (relies on a wrapper script that prevents it from going below 0)
set $brightness_adjust 7
bindsym XF86MonBrightnessUp exec --no-startup-id $HOME/bin/brightness_adjust.sh $brightness_adjust +
bindsym XF86MonBrightnessDown exec --no-startup-id $HOME/bin/brightness_adjust.sh $brightness_adjust -
# Error searching macro
bindsym Ctrl+Shift+Mod1+a exec --no-startup-id $HOME/bin/search_error_wayland.sh
# Clipboard manager
bindsym $mod+dead_grave exec --no-startup-id copyq toggle
# Lock screen
bindsym $mod+Shift+t exec --no-startup-id $lock_command
# Work apps
# bindsym Mod1+Shift+asciitilde exec $HOME/bin/open_work_apps.sh
bindsym Mod1+Shift+numbersign exec $HOME/bin/open_work_apps.sh
# Shutdown menu
bindsym Ctrl+Shift+Escape exec --no-startup-id nwg-bar
# Focus on the workspace that has the window with the given name
# bindsym $mod+Shift+f exec --no-startup-id $HOME/bin/i3_window_finder.py $(dmenu -p "Window name:" < /dev/null)

bindsym alt+F5 exec --no-startup-id i3-quickterm shell

### Startup programs
exec nm-applet
exec dunst
# exec yakuake
exec copyq
# exec --no-startup-id caffeine
exec libinput-gestures-setup autostart start
exec kanshi
exec $HOME/bin/change_wallpapers.sh -f
exec ydotoold
#exec --no-startup-id redshift-gtk

# to disable middle mouse being paste (see my .xbindkeysrc file)
# TODO fix for wayland exec --no-startup-id xbindkeys

# for playerctl commands to apply on the last used player
exec --no-startup-id $playerctl_cmd status --format '{{ playerName }}' --follow > $file_player_last

# bar {
#     position top
#
#     # When the status_command prints a new line to stdout, swaybar updates.
#     # The default just shows the current date and time.
#     status_command while date +'%Y-%m-%d %X'; do sleep 1; done
#
#     colors {
#         statusline #ffffff
#         background #323232
#         inactive_workspace #32323200 #32323200 #5c5c5c
#     }
# }
